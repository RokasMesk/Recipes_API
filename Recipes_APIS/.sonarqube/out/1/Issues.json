{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.9.0.0",
        "fileVersion": "4.9.2-3.24129.6 (9934fb9e)",
        "semanticVersion": "4.9.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 35,
                  "endLine": 31,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 41,
                  "endLine": 31,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 47,
                  "endLine": 31,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 53,
                  "endLine": 31,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 59,
                  "endLine": 31,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 17,
                  "endLine": 37,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 23,
                  "endLine": 32,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 29,
                  "endLine": 32,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 41,
                  "endLine": 32,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 47,
                  "endLine": 32,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 53,
                  "endLine": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 59,
                  "endLine": 32,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 41,
                  "endLine": 45,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 55,
                  "endLine": 49,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 58,
                  "endLine": 44,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 60,
                  "endLine": 46,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 52,
                  "endLine": 68,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 56,
                  "endLine": 70,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 44,
                  "endLine": 56,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 41,
                  "endLine": 66,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockRecipeTypeRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 45,
                  "endLine": 17,
                  "endColumn": 70
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 45,
                  "endLine": 17,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_controller' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 38,
                  "endLine": 18,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 38,
                  "endLine": 18,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 28,
                  "endLine": 66,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 25,
                  "endLine": 67,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 100,
                  "endLine": 79,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockProductRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_controller' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 41,
                  "endLine": 90,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 55,
                  "endLine": 94,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 87,
                  "endLine": 102,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 41,
                  "endLine": 144,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 55,
                  "endLine": 148,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 87,
                  "endLine": 152,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 36,
                  "endLine": 163,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 25,
                  "endLine": 164,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 41,
                  "endLine": 166,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 32,
                  "endLine": 194,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 41,
                  "endLine": 213,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 51,
                  "endLine": 217,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 85,
                  "endLine": 219,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 41,
                  "endLine": 248,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 47,
                  "endLine": 252,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 41,
                  "endLine": 299,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 59,
                  "endLine": 303,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 85,
                  "endLine": 250,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 41,
                  "endLine": 349,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 51,
                  "endLine": 354,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_controller' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_recipeRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 41,
                  "endLine": 18,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 41,
                  "endLine": 18,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_productRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 42,
                  "endLine": 19,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 42,
                  "endLine": 19,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_recipeTypeRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 45,
                  "endLine": 20,
                  "endColumn": 70
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 45,
                  "endLine": 20,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockUserManager' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 52,
                  "endLine": 21,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 52,
                  "endLine": 21,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 41,
                  "endLine": 314,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 91,
                  "endLine": 329,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 41,
                  "endLine": 336,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 41,
                  "endLine": 353,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 41,
                  "endLine": 384,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 36,
                  "endLine": 387,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 34,
                  "endLine": 388,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockUserManager' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 52,
                  "endLine": 20,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 52,
                  "endLine": 20,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockSignInManager' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 54,
                  "endLine": 21,
                  "endColumn": 72
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 54,
                  "endLine": 21,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockTokenRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 40,
                  "endLine": 22,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 40,
                  "endLine": 22,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_mockRecipeRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 41,
                  "endLine": 23,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 41,
                  "endLine": 23,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_controller' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 32,
                  "endLine": 24,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 32,
                  "endLine": 24,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 13,
                  "endLine": 48,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 13,
                  "endLine": 49,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 17,
                  "endLine": 49,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 85,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, ClassicAssert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeTypeControllerTests.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 13,
                  "endLine": 68,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 70,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 13,
                  "endLine": 71,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/ProductControllerTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2049",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(...), instead of the classic model, CollectionAssert(...)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComparerParameterIndex": "0",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2045",
          "level": "note",
          "message": "Call independent Assert statements from inside an Assert.Multiple",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2045",
          "level": "note",
          "message": "Call independent Assert statements from inside an Assert.Multiple",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 70,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 13,
                  "endLine": 130,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 13,
                  "endLine": 94,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 13,
                  "endLine": 95,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 13,
                  "endLine": 143,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 13,
                  "endLine": 144,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 13,
                  "endLine": 145,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 13,
                  "endLine": 149,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 13,
                  "endLine": 160,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 13,
                  "endLine": 162,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 13,
                  "endLine": 166,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2037",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(collection, Does.Contain(instance)), instead of the classic model, ClassicAssert.Contains(instance, collection)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 17,
                  "endLine": 169,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "Contains"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 13,
                  "endLine": 165,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 13,
                  "endLine": 166,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 13,
                  "endLine": 190,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 13,
                  "endLine": 193,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 13,
                  "endLine": 195,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 13,
                  "endLine": 211,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 13,
                  "endLine": 212,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 13,
                  "endLine": 213,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 13,
                  "endLine": 214,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 13,
                  "endLine": 217,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 13,
                  "endLine": 225,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 13,
                  "endLine": 247,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 13,
                  "endLine": 248,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 13,
                  "endLine": 249,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 13,
                  "endLine": 252,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 13,
                  "endLine": 253,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 13,
                  "endLine": 241,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 13,
                  "endLine": 256,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 13,
                  "endLine": 298,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 13,
                  "endLine": 299,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 13,
                  "endLine": 300,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 13,
                  "endLine": 303,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 13,
                  "endLine": 304,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 13,
                  "endLine": 305,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 13,
                  "endLine": 270,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 13,
                  "endLine": 289,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 13,
                  "endLine": 291,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 13,
                  "endLine": 348,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 13,
                  "endLine": 349,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 13,
                  "endLine": 350,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 13,
                  "endLine": 354,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 13,
                  "endLine": 355,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/RecipeControllerTests.cs",
                "region": {
                  "startLine": 356,
                  "startColumn": 13,
                  "endLine": 356,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 13,
                  "endLine": 313,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 13,
                  "endLine": 314,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 13,
                  "endLine": 315,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 335,
                  "startColumn": 13,
                  "endLine": 335,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 13,
                  "endLine": 336,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 13,
                  "endLine": 337,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 13,
                  "endLine": 352,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 13,
                  "endLine": 353,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 13,
                  "endLine": 354,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2018",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 13,
                  "endLine": 383,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "NotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 13,
                  "endLine": 384,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2038",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 385,
                  "startColumn": 13,
                  "endLine": 385,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsInstanceOf"
            }
          }
        },
        {
          "ruleId": "NUnit2003",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, ClassicAssert.IsTrue(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 13,
                  "endLine": 388,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "IsTrue"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 391,
                  "startColumn": 13,
                  "endLine": 391,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2037",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(collection, Does.Contain(instance)), instead of the classic model, ClassicAssert.Contains(instance, collection)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/ASUS/source/repos/Recipes_API/Recipes_APIS/TestProject1/UserControllerTests.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 17,
                  "endLine": 394,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "ModelName": "Contains"
            }
          }
        }
      ],
      "rules": {
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Cannot convert null literal to non-nullable reference type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "NUnit2003": {
          "id": "NUnit2003",
          "shortDescription": "Consider using Assert.That(expr, Is.True) instead of ClassicAssert.IsTrue(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, ClassicAssert.IsTrue(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2003.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2005": {
          "id": "NUnit2005",
          "shortDescription": "Consider using Assert.That(actual, Is.EqualTo(expected)) instead of ClassicAssert.AreEqual(expected, actual)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, ClassicAssert.AreEqual(expected, actual).",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2005.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2017": {
          "id": "NUnit2017",
          "shortDescription": "Consider using Assert.That(expr, Is.Null) instead of ClassicAssert.IsNull(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, ClassicAssert.IsNull(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2017.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2018": {
          "id": "NUnit2018",
          "shortDescription": "Consider using Assert.That(expr, Is.Not.Null) instead of ClassicAssert.NotNull(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.NotNull(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2018.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2019": {
          "id": "NUnit2019",
          "shortDescription": "Consider using Assert.That(expr, Is.Not.Null) instead of ClassicAssert.IsNotNull(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, ClassicAssert.IsNotNull(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2019.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2037": {
          "id": "NUnit2037",
          "shortDescription": "Consider using Assert.That(collection, Does.Contain(instance)) instead of ClassicAssert.Contains(instance, collection)",
          "fullDescription": "Consider using the constraint model, Assert.That(collection, Does.Contain(instance)), instead of the classic model, ClassicAssert.Contains(instance, collection).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2037.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2038": {
          "id": "NUnit2038",
          "shortDescription": "Consider using Assert.That(actual, Is.InstanceOf(expected)) instead of ClassicAssert.IsInstanceOf(expected, actual)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, Is.InstanceOf(expected)), instead of the classic model, ClassicAssert.IsInstanceOf(expected, actual).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2038.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2045": {
          "id": "NUnit2045",
          "shortDescription": "Use Assert.Multiple",
          "fullDescription": "Hosting Asserts inside an Assert.Multiple allows detecting more than one failure.",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2045.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2049": {
          "id": "NUnit2049",
          "shortDescription": "Consider using Assert.That(...) instead of CollectionAssert(...)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, {0}(expected)), instead of the classic model, CollectionAssert.{1}(expected, actual).",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2049.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}